data = read.csv('NPI.csv')
data
file = read.csv('NPI.csv')[2:5]
data = c()
for (i in 1:length(file[,1])){
data = c(data,file[i,])
}
data
data[1,]
file[1,]
c(data[1,],data[2,])
c(file[1,],file[2,])
as.numeric(data[1,])
as.numeric(file[1,])
file[1,]
file = read.table('NPI.txt')[2:5]
file = read.table('NPI')[2:5]
getwd
getwd()
setwd("setwd("/Users/cryan/Desktop/Assignment/STAT-2302/project")
)
""
setwd("/Users/cryan/Desktop/Assignment/STAT-2302/project")
file = read.table('NPI')[2:5]
file = read.table('NPI.txt')[2:5]
file = read.table('NPI.txt',fill = T)[2:5]
file
data = c()
for (i in 1:length(file[,1])){
data = c(data,file[i,])
}
data
file <- as.numeric(as.matrix(t(file)))
file
NPI <- read.table("NPI.txt",fill = TRUE,header = TRUE)[,2:5]
NPI <- as.numeric(as.matrix(t(NPI)))
NPI
NPI <- read.table("NPI.txt",fill = TRUE,header = TRUE)[,2:5]
NPI
as.matric(NPI)
as.matrix(NPI)
NPI <- as.numeric(as.matrix(NPI))
NPI
as.matrix(NPI)
NPI <- read.table("NPI.txt",fill = TRUE,header = TRUE)[,2:5]
as.matrix(NPI)
NPI <- as.numeric(as.matrix(NPI))
NPI <- read.table("NPI.txt",fill = TRUE,header = TRUE)[,2:5]
NPI
data = c()
for (i in 1:length(file[,1])){
data = c(data,as.numeric(file[i,])
}
data = c()
for (i in 1:length(file[,1])){
data = c(data,as.numeric(file[i,]))
}
for (i in 1:length(NPI[,1])){
data = c(data,as.numeric(NPI[i,]))
}
data
NPI <- as.matrix(NPI)
NPI <- read.table("NPI.txt",fill = TRUE,header = TRUE)[,2:5]
NPI <- as.matrix(NPI)
data = c()
for (i in 1:length(NPI[,1])){
data = c(data,as.numeric(NPI[i,]))
}
data
NPI <- read.table("NPI.txt",fill = TRUE,header = TRUE)[,2:5]
NPI <- as.matrix(NPI)
NPI
NPI[1,]
as.numeric(NPI[1,])
NPI <- read.csv("NPI.csv",fill = TRUE,header = TRUE)[,2:5]
NPI
data = c()
for (i in 1:length(NPI[,1])){
data = c(data,as.numeric(NPI[i,]))
}
data
data[-1]
data[-length(data)]
NPI <- read.csv("NPI.csv",fill = TRUE,header = TRUE)[,2:5]
data = c()
for (i in 1:length(NPI[,1])){
data = c(data,as.numeric(NPI[i,]))
}
data =data[-length(data)]
data
NPI
data
library('itsmr')
library('forecast')
tsdisplay(data)
tsdisplay(log(data))
tsdisplay(data^2)
tsdisplay(log(data^2))
tsdisplay(data)
mean(NPI[,1])
mean(NPI[,2])
mean(NPI[,3])
mean(NPI[,4])
mean(NPI[,4],na.rm = T)
NPI[,1] =NPI[,1] - mean(NPI[,1])
NPI[,2] = NPI[,2] - mean(NPI[,2])
NPI[,3] = NPI[,3] - mean(NPI[,3])
NPI[,4] = NPI[,4] - mean(NPI[,4],na.rm = T)
data = c()
for (i in 1:length(NPI[,1])){
data = c(data,as.numeric(NPI[i,]))
}
data
data =data[-length(data)] #the last elemet is NA corresponding to the Q4 of 2015
tsdisplay(data)
mean(NPI[,1])
NPI <- read.csv("NPI.csv",fill = TRUE,header = TRUE)[,2:5]
mean(NPI[,1])
NPI[,1]
NPI <- read.csv("NPI.csv",fill = TRUE,header = TRUE)[,2:5]
data = c()
for (i in 1:length(NPI[,1])){
data = c(data,as.numeric(NPI[i,]))
}
data =data[-length(data)] #the last elemet is NA corresponding to the Q4 of 2015
tsdisplay(data)
?auto.arima
model = auto.arima(data,trace = T,ic = 'aicc',stepwise = T,allowmean=T,allowdrift = F,seasonal = F,max.p =5,max.q=5,max.d=3)
model = auto.arima(data,trace = T,ic = 'aicc',stepwise = F,allowmean=T,
allowdrift = F,seasonal = F,max.p =5,max.q=5,max.d=3)
model
model = auto.arima(data,trace = T,ic = 'aicc',stepwise = F,allowmean=T,
allowdrift = F,seasonal = F,max.p =5,max.q=5,max.d=3)
model = auto.arima(data,trace = T,ic = 'aicc',stepwise = T,allowmean=T,
allowdrift = F,seasonal = F,max.p =5,max.q=5,max.d=3)
plot(diff(data))
model = auto.arima(diff(data),trace = T,ic = 'aicc',stepwise = T,allowmean=T,
allowdrift = F,seasonal = F,max.p =5,max.q=5,max.d=3)
?auto.arima
plot.Arima(model)
model
model = auto.arima(data,trace = T,ic = 'aicc',stepwise = T,allowmean=T,
allowdrift = F,seasonal = F,max.p =5,max.q=5,max.d=3)
plot.Arima(model)
```
model
pvalue = (1-pnorm(abs(model$coef)/sqrt(diag(model$var.coef))))*2;pvalue
?test
test(model$residuals)
model = auto.arima(diff(data),trace = T,ic = 'aicc',stepwise = T,allowmean=T,
allowdrift = F,seasonal = F,max.p =5,max.q=5,max.d=3)
model = arima(data,c(5,1,3))
test(model$residuals)
model$residuals
plot(model$residuals)
plot(model$residuals)
model$residuals
test(model$residuals)
?auto.arima
model = auto.arima(data,d = 1,trace = T,ic = 'aicc',stepwise = T,allowmean=T,
allowdrift = F,seasonal = F,max.p =5,max.q=5,max.d=3)
plot.Arima(model)
model = auto.arima(data,d = c(1,2),trace = T,ic = 'aicc',stepwise = T,allowmean=T,
allowdrift = F,seasonal = F,max.p =5,max.q=5,max.d=3)
model = auto.arima(data,d = 0,trace = T,ic = 'aicc',stepwise = T,allowmean=T,
allowdrift = F,seasonal = F,max.p =5,max.q=5,max.d=3)
model = auto.arima(data,d = 1,trace = T,ic = 'aicc',stepwise = T,allowmean=T,
allowdrift = F,seasonal = F,max.p =5,max.q=5,max.d=3)
model = auto.arima(data,trace = T,ic = 'aicc',stepwise = T,allowmean=T,
allowdrift = F,seasonal = F,max.order = 10)
model
model = auto.arima(data,trace = T,d =1,ic = 'aicc',stepwise = T,allowmean=T,
allowdrift = F,seasonal = F,max.p =5,max.q=5,max.d=3)
model
plot(data)
